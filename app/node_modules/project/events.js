var dal = require('dal/project');
var q = require('hyperquest');
var config = require('rc')('prohub');

var debounce;

exports.test = function(stream, data, token) {
  if (data.page && data.page == 'project') 
    return true;
};

exports.handler = function(stream, data, token) {

  if (data.project) {

    data.project.token = token;
    dal.getProject(token, data.project, stream, function(err, data) {

      // TODO handle error properly.
      if (err) {
        return stream.write({ 
          page: 'project', 
          error: err.message 
        });
      }
 
      data.org = config.org;
      stream.write({
        page: 'project',
        project: data
      });
    });
  }

  if (data.remove) {
    var projectId = data.remove.id;
    var repo = data.remove.repo;

    return dal.removeRepo(projectId, repo, function(err) {
      if (err) {
        return stream.write({
          page: 'project',
          error: err.message
        });
      }

      stream.write({
        page: 'project',
        remove: repo
      });
    });
  }

  if (data.repo) {
    data.repo.url = 'https://github.com/' + data.repo.url;
    q(data.repo.url, function(err, res) {
      if (err || res.statusCode == 404) {
        data.error = err && err.message || res.headers.status || res.statusCode;
        return stream.write(data);
      }
      dal.addRepo(data.repo, function(err) {
        if (err) {
          data.error = err.message;
          return stream.write(data);
        }
        data.statusCode = res.headers.status;
        stream.write(data);
      });
    });
  }

};

